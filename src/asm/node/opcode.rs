pub mod instruction;

use crate::asm::node::opcode::instruction::{CheckCast, GetField, GetStatic, InstanceOf, InvokeDynamic, InvokeInterface, InvokeSpecial, InvokeStatic, InvokeVirtual, Ldc, Ldc2_w, MultiANewArray, New, PutField, PutStatic, Wide};
use num_enum::TryFromPrimitive;
use serde::{Deserialize, Serialize};

#[repr(u8)]
#[derive(
    Debug,
    Copy,
    Clone,
    Ord,
    PartialOrd,
    Eq,
    PartialEq,
    Hash,
    Serialize,
    Deserialize,
    TryFromPrimitive,
)]
pub enum ArrayType {
    Boolean = 4,
    Char = 5,
    Float = 6,
    Double = 7,
    Byte = 8,
    Short = 9,
    Int = 10,
    Long = 11,
}

#[repr(u8)]
#[derive(
    Debug,
    Copy,
    Clone,
    Ord,
    PartialOrd,
    Eq,
    PartialEq,
    Hash,
    Serialize,
    Deserialize,
    TryFromPrimitive,
)]
pub enum RefKind {
    GetField = 1,
    GetStatic = 2,
    PutField = 3,
    PutStatic = 4,
    InvokeVirtual = 5,
    InvokeStatic = 6,
    InvokeSpecial = 7,
    NewInvokeSpecial = 8,
    InvokeInterface = 9,
}

// noinspection SpellCheckingInspection
/// [Opcode] represents low level JVM bytecode opcodes without any accompany data.
#[repr(u8)]
#[derive(
    Debug,
    Copy,
    Clone,
    Ord,
    PartialOrd,
    Eq,
    PartialEq,
    Hash,
    Serialize,
    Deserialize,
    TryFromPrimitive,
)]
#[allow(non_camel_case_types)]
pub enum Opcode {
    NOP = 0,
    ACONST_NULL = 1,
    ICONST_M1 = 2,
    ICONST_0 = 3,
    ICONST_1 = 4,
    ICONST_2 = 5,
    ICONST_3 = 6,
    ICONST_4 = 7,
    ICONST_5 = 8,
    LCONST_0 = 9,
    LCONST_1 = 10,
    FCONST_0 = 11,
    FCONST_1 = 12,
    FCONST_2 = 13,
    DCONST_0 = 14,
    DCONST_1 = 15,
    BIPUSH = 16,
    SIPUSH = 17,
    LDC = 18,
    LDC_W = 19,
    LDC2_W = 20,
    ILOAD = 21,
    LLOAD = 22,
    FLOAD = 23,
    DLOAD = 24,
    ALOAD = 25,
    ILOAD_0 = 26,
    ILOAD_1 = 27,
    ILOAD_2 = 28,
    ILOAD_3 = 29,
    LLOAD_0 = 30,
    LLOAD_1 = 31,
    LLOAD_2 = 32,
    LLOAD_3 = 33,
    FLOAD_0 = 34,
    FLOAD_1 = 35,
    FLOAD_2 = 36,
    FLOAD_3 = 37,
    DLOAD_0 = 38,
    DLOAD_1 = 39,
    DLOAD_2 = 40,
    DLOAD_3 = 41,
    ALOAD_0 = 42,
    ALOAD_1 = 43,
    ALOAD_2 = 44,
    ALOAD_3 = 45,
    IALOAD = 46,
    LALOAD = 47,
    FALOAD = 48,
    DALOAD = 49,
    AALOAD = 50,
    BALOAD = 51,
    CALOAD = 52,
    SALOAD = 53,
    ISTORE = 54,
    LSTORE = 55,
    FSTORE = 56,
    DSTORE = 57,
    ASTORE = 58,
    ISTORE_0 = 59,
    ISTORE_1 = 60,
    ISTORE_2 = 61,
    ISTORE_3 = 62,
    LSTORE_0 = 63,
    LSTORE_1 = 64,
    LSTORE_2 = 65,
    LSTORE_3 = 66,
    FSTORE_0 = 67,
    FSTORE_1 = 68,
    FSTORE_2 = 69,
    FSTORE_3 = 70,
    DSTORE_0 = 71,
    DSTORE_1 = 72,
    DSTORE_2 = 73,
    DSTORE_3 = 74,
    ASTORE_0 = 75,
    ASTORE_1 = 76,
    ASTORE_2 = 77,
    ASTORE_3 = 78,
    IASTORE = 79,
    LASTORE = 80,
    FASTORE = 81,
    DASTORE = 82,
    AASTORE = 83,
    BASTORE = 84,
    CASTORE = 85,
    SASTORE = 86,
    POP = 87,
    POP2 = 88,
    DUP = 89,
    DUP_X1 = 90,
    DUP_X2 = 91,
    DUP2 = 92,
    DUP2_X1 = 93,
    DUP2_X2 = 94,
    SWAP = 95,
    IADD = 96,
    LADD = 97,
    FADD = 98,
    DADD = 99,
    ISUB = 100,
    LSUB = 101,
    FSUB = 102,
    DSUB = 103,
    IMUL = 104,
    LMUL = 105,
    FMUL = 106,
    DMUL = 107,
    IDIV = 108,
    LDIV = 109,
    FDIV = 110,
    DDIV = 111,
    IREM = 112,
    LREM = 113,
    FREM = 114,
    DREM = 115,
    INEG = 116,
    LNEG = 117,
    FNEG = 118,
    DNEG = 119,
    ISHL = 120,
    LSHL = 121,
    ISHR = 122,
    LSHR = 123,
    IUSHR = 124,
    LUSHR = 125,
    IAND = 126,
    LAND = 127,
    IOR = 128,
    LOR = 129,
    IXOR = 130,
    LXOR = 131,
    IINC = 132,
    I2L = 133,
    I2F = 134,
    I2D = 135,
    L2I = 136,
    L2F = 137,
    L2D = 138,
    F2I = 139,
    F2L = 140,
    F2D = 141,
    D2I = 142,
    D2L = 143,
    D2F = 144,
    I2B = 145,
    I2C = 146,
    I2S = 147,
    LCMP = 148,
    FCMPL = 149,
    FCMPG = 150,
    DCMPL = 151,
    DCMPG = 152,
    IFEQ = 153,
    IFNE = 154,
    IFLT = 155,
    IFGE = 156,
    IFGT = 157,
    IFLE = 158,
    IF_ICMPEQ = 159,
    IF_ICMPNE = 160,
    IF_ICMPLT = 161,
    IF_ICMPGE = 162,
    IF_ICMPGT = 163,
    IF_ICMPLE = 164,
    IF_ACMPEQ = 165,
    IF_ACMPNE = 166,
    GOTO = 167,
    JSR = 168,
    RET = 169,
    TABLESWITCH = 170,
    LOOKUPSWITCH = 171,
    IRETURN = 172,
    LRETURN = 173,
    FRETURN = 174,
    DRETURN = 175,
    ARETURN = 176,
    RETURN = 177,
    GETSTATIC = 178,
    PUTSTATIC = 179,
    GETFIELD = 180,
    PUTFIELD = 181,
    INVOKEVIRTUAL = 182,
    INVOKESPECIAL = 183,
    INVOKESTATIC = 184,
    INVOKEINTERFACE = 185,
    INVOKEDYNAMIC = 186,
    NEW = 187,
    NEWARRAY = 188,
    ANEWARRAY = 189,
    ARRAYLENGTH = 190,
    ATHROW = 191,
    CHECKCAST = 192,
    INSTANCEOF = 193,
    MONITORENTER = 194,
    MONITOREXIT = 195,
    WIDE = 196,
    MULTIANEWARRAY = 197,
    IFNULL = 198,
    IFNONNULL = 199,
}

// noinspection SpellCheckingInspection
#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash, Serialize, Deserialize)]
#[allow(non_camel_case_types)]
pub enum Instruction {
    NOP,
    ACONST_NULL,
    ICONST_M1,
    ICONST_0,
    ICONST_1,
    ICONST_2,
    ICONST_3,
    ICONST_4,
    ICONST_5,
    LCONST_0,
    LCONST_1,
    FCONST_0,
    FCONST_1,
    FCONST_2,
    DCONST_0,
    DCONST_1,
    BIPUSH(i8),
    SIPUSH(i16),
    LDC(Ldc),
    LDC_W(Ldc2_w),
    LDC2_W(Ldc2_w),
    ILOAD(u8),
    LLOAD(u8),
    FLOAD(u8),
    DLOAD(u8),
    ALOAD(u8),
    ILOAD_0,
    ILOAD_1,
    ILOAD_2,
    ILOAD_3,
    LLOAD_0,
    LLOAD_1,
    LLOAD_2,
    LLOAD_3,
    FLOAD_0,
    FLOAD_1,
    FLOAD_2,
    FLOAD_3,
    DLOAD_0,
    DLOAD_1,
    DLOAD_2,
    DLOAD_3,
    ALOAD_0,
    ALOAD_1,
    ALOAD_2,
    ALOAD_3,
    IALOAD,
    LALOAD,
    FALOAD,
    DALOAD,
    AALOAD,
    BALOAD,
    CALOAD,
    SALOAD,
    ISTORE(u8),
    LSTORE(u8),
    FSTORE(u8),
    DSTORE(u8),
    ASTORE(u8),
    ISTORE_0,
    ISTORE_1,
    ISTORE_2,
    ISTORE_3,
    LSTORE_0,
    LSTORE_1,
    LSTORE_2,
    LSTORE_3,
    FSTORE_0,
    FSTORE_1,
    FSTORE_2,
    FSTORE_3,
    DSTORE_0,
    DSTORE_1,
    DSTORE_2,
    DSTORE_3,
    ASTORE_0,
    ASTORE_1,
    ASTORE_2,
    ASTORE_3,
    IASTORE,
    LASTORE,
    FASTORE,
    DASTORE,
    AASTORE,
    BASTORE,
    CASTORE,
    SASTORE,
    POP,
    POP2,
    DUP,
    DUP_X1,
    DUP_X2,
    DUP2,
    DUP2_X1,
    DUP2_X2,
    SWAP,
    IADD,
    LADD,
    FADD,
    DADD,
    ISUB,
    LSUB,
    FSUB,
    DSUB,
    IMUL,
    LMUL,
    FMUL,
    DMUL,
    IDIV,
    LDIV,
    FDIV,
    DDIV,
    IREM,
    LREM,
    FREM,
    DREM,
    INEG,
    LNEG,
    FNEG,
    DNEG,
    ISHL,
    LSHL,
    ISHR,
    LSHR,
    IUSHR,
    LUSHR,
    IAND,
    LAND,
    IOR,
    LOR,
    IXOR,
    LXOR,
    IINC {
        index: u8,
        value: i8,
    },
    I2L,
    I2F,
    I2D,
    L2I,
    L2F,
    L2D,
    F2I,
    F2L,
    F2D,
    D2I,
    D2L,
    D2F,
    I2B,
    I2C,
    I2S,
    LCMP,
    FCMPL,
    FCMPG,
    DCMPL,
    DCMPG,
    IFEQ(i16),
    IFNE(i16),
    IFLT(i16),
    IFGE(i16),
    IFGT(i16),
    IFLE(i16),
    IF_ICMPEQ(i16),
    IF_ICMPNE(i16),
    IF_ICMPLT(i16),
    IF_ICMPGE(i16),
    IF_ICMPGT(i16),
    IF_ICMPLE(i16),
    IF_ACMPEQ(i16),
    IF_ACMPNE(i16),
    GOTO(i16),
    JSR(i16),
    RET(u8),
    TABLESWITCH {
        default: i32,
        low: i32,
        high: i32,
        offsets: Vec<i32>,
    },
    LOOKUPSWITCH {
        default: i32,
        pairs: Vec<(i32, i32)>,
    },
    IRETURN,
    LRETURN,
    FRETURN,
    DRETURN,
    ARETURN,
    RETURN,
    GETSTATIC(GetStatic),
    PUTSTATIC(PutStatic),
    GETFIELD(GetField),
    PUTFIELD(PutField),
    INVOKEVIRTUAL(InvokeVirtual),
    INVOKESPECIAL(InvokeSpecial),
    INVOKESTATIC(InvokeStatic),
    INVOKEINTERFACE(InvokeInterface),
    INVOKEDYNAMIC(InvokeDynamic),
    NEW(New),
    NEWARRAY(ArrayType),
    ANEWARRAY(u16),
    ARRAYLENGTH,
    ATHROW,
    CHECKCAST(CheckCast),
    INSTANCEOF(InstanceOf),
    MONITORENTER,
    MONITOREXIT,
    WIDE(Wide),
    MULTIANEWARRAY(MultiANewArray),
    IFNULL(i16),
    IFNONNULL(i16),
    GOTO_W(i64),
    JSR_W(i64),
}
